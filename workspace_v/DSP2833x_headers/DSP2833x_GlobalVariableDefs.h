// TI File $Revision: /main/2 $
//用于说明.h文件的版本号；

// Checkin $Date: March 1, 2007   15:57:02 $
//用于写明该头文件的编写日期和编写人及核对人；

//###########################################################################
//
// FILE:	DSP2833x_Sci.h
//写明文件名：文件名采用控制器型号+对应的功能_h的方式定义；

// TITLE:	DSP2833x Device SCI Register Definitions.
//写明该头文件的功能；对应用源程序中存在的全局变量的声明和通用的宏定义功能；

//###########################################################################
// $TI Release: DSP2833x/DSP2823x C/C++ Header Files V1.31 $
// $Release Date: August 4, 2009 $
//###########################################################################

#ifndef DSP2833x_DSP2833x_GLOBALVARIABLEDEFS_H
//功能：判断该头文件是否已经编译？假如没有编译则先给该头文件定义一个名字，然后判断编译器是否支持C++编译方式，
//如果支持则采用C编译器方式；如果该头文件已经编译，则不需要编译以下内容；
//这样就可以有效的防止头文件在不同的源文件中引用时，出现变量的重复定义的问题；编译的头文件的标志和头文件的名称并不是完全一样的；

	#define DSP2833x_DSP2833x_GLOBALVARIABLEDEFS_H
//给头文件取个名字，取名方法按照文件名的方式命名；

	#ifdef __cplusplus
//判断该编译器是否支持C++编译方式，其中_cplusplus是C++编译器自身生成的名字；

	extern "C" 
//告诉编译器以下代码采用C编译的方式编译；
		{
		#endif
		//正常的声明定义段


		#ifdef __cplusplus
		}

	#endif /* extern "C" */
//结束C编译方式，与#ifdef __cplusplus对应；

#endif  // end of DSP2833x_SCI_H definition
//结束头文件判断编译，与#ifndef DSP2833x_SCI_H相对应；

//===========================================================================
// End of file.
//===========================================================================
//整个完成；
